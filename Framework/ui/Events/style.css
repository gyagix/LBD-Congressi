form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 10px;
    margin-bottom: 15px;
}

form label {
  display: block;
  font-size: 12px;
  margin-bottom: 2px;
}

form input,
form textarea,
form button,
form select {
  padding: 5px;
  font-size: 14px;
  width: 100%;
  box-sizing: border-box;
}

form textarea {
  min-height: 40px;
}

form button {
  grid-column: span 2;
  cursor: pointer;
}

table {
  border-collapse: collapse;
  width: 100%;
  font-size: 14px;
}

th,
td {
  border: 1px solid #ddd;
  padding: 6px 10px;
}

th {
  background-color: #f4f4f4;
  cursor: pointer;
}

tr:nth-child(even) {
  background-color: #fafafa;
}

input[type='text'],
input[type='number'],
input[type='date'],
input[type='time'],
textarea,
select {
  border: 1px solid #ccc;
  border-radius: 3px;
}


/*Filtri elenco*/

	.filter-list{
		display: flex;
		gap: 0.5em;

    
	}

	.button-icon{
		display: inline-flex;        /* attiva flexbox */
		align-items: center;         /* centra verticalmente */
		justify-content: center;     /* centra orizzontalmente */
		width: 50px;                 /* dimensione fissa (opzionale) */
		height: 40px;
		border: 1px solid #ccc;
		border-radius: 6px;
		background: #f5f5f5;
		cursor: pointer;
	}

  .list-scroll{
    height: 60svh;                 /* altezza dinamica */
    overflow-y: auto;
    overflow-x: auto;              /* abilita scroll orizzontale se necessario */
    -webkit-overflow-scrolling: touch;    
		opacity: 1;
		display: block;
		transition: opacity 0.7s ease;
  }
/*Tabella elenco*/
	.table-list{
    width: 100%;
    table-layout: fixed;           /* colonne fisse */
	}

  .table-list th,
  .table-list td {
      padding: 6px 10px;
      border: 1px solid #ddd;      
      text-align: left;
  }
  
  /* Header della tabella fisso dentro .list-scroll */
  .table-list thead th{
    position: sticky;
    top: 0;
    background: #f4f4f4;
    z-index: 1;
    border-bottom: 2px solid #ccc;
  }
  
  /* Corpo scrollabile * /
  .table-list tbody {
      max-height: 400px;   /* uguale a .list-scroll * /
      overflow-y: auto;
      width: 100%;
  }
      */
  
  /* Righe del corpo 
  .table-list tbody tr {
      display: table-row;
      table-layout: fixed;
      width: 100%;
  }*/

	.table-list tbody tr:hover{
      background-color: #cccccc;
	}
	.table-list th:first-child,
  .table-list td:first-child,
  .table-list th:last-child,
  .table-list td:last-child {
      width: 60px;
	}

  .table-list th:nth-child(2),
  .table-list td:nth-child(2) {
      width: 50px;
	}

	.list-scroll-hide{
		  opacity:0;
      transition: opacity 0.7s ease;
		  display: none	;
	}

	.table-list-column-hide{
		opacity:0;
        transition: opacity 0.7s ease;
		display: none	;
	}

/*Overlay modifica*/
    .overlay {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex; 
        justify-content: center;
        align-items: center;
        overflow: auto;  
        z-index: 10;
        opacity: 1;
    }

    .overlayhidden{
        transition: opacity 0.7s ease;
		opacity:0;
        display:none;
    }

    .modelContent {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        width: 80%;
        max-width: 90%;
        max-height: 80%;
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        margin:auto;
        max-height: 80vh;          /* limite in altezza */
        overflow-y: auto;          /* scroll solo interno */
        z-index: 100;

        opacity: 1;
        transform: scale(1);
        transition: opacity 0.3s ease, transform 0.3s ease;
    }
    .modelContentHidden{
        opacity: 0;
        transform: scale(0.95);
        pointer-events: none;
        display: none;
    }

	.modelContent form{
		display: grid;
		grid-template-columns: 1fr 1fr; /* due colonne */
		gap: 1em;
	}
	.modelContent form > div {
		display: flex;
		flex-direction: column;
	}

	/* Il campo Note prende entrambe le colonne */
	.modelContent form > div:has(textarea) {
		grid-column: 1 / -1;
	}
	.modelContent form .modalContainerContentButtons{
		grid-column: 1 / -1;          /* forza a occupare tutta la larghezza della grid */
		display: flex;		
    	flex-direction: row;
		gap: 1em;                     /* spazio tra i bottoni */
		margin-top: 1em;

	}
	/* Su schermi piccoli i bottoni vanno uno sotto l'altro */
	@media (max-width: 500px) {
		.modelContent form .modalContainerContentButtons {
			/*grid-template-columns: 1fr;     /* una sola colonna */
		}
	}

    .modalContentButton{
        display: inline-flex;      /* layout orizzontale con flex */
        align-items: center;       /* centra verticalmente testo e SVG */
        justify-content: center;   /* centra orizzontalmente dentro il bottone */
        gap: 6px;                  /* spazio tra testo e icona */
        padding: 6px 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background: #f5f5f5;
        cursor: pointer;
    }
    .modalContentButton:hover{
        background-color: #cccccc;
        border: 1px solid #f5f5f5;
    }


    /*Gestione colonne da mostrare/nascondere*/
    .modalShowHideTableCols {
        background: #fff;
        border-radius: 8px;
        padding: 20px;
        width: 500px;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 4px 10px rgba(0,0,0,0.3);
        pointer-events: auto;
        z-index: 100;

        /* Transizione */
        opacity: 1;
        transform: scale(1);
        transition: opacity 0.3s ease, transform 0.3s ease;
        display: block; /* sempre visibile nel DOM */
    }
    .modalShowHideTableColsHidden{
        opacity: 0;
        transform: scale(0.95); /* effetto riduzione */
        display: none; /* rimuove dal layout */
        pointer-events: none;
    }

    .modalShowHideTableCols .checkbox-list-columns {
        display: grid;
        grid-template-columns: 1fr 1fr; /* due colonne uguali */
        gap: 8px;
    }

    .modalShowHideTableCols .checkbox-item {
        font-size: 14px;
    }

    .modalShowHideTableCols .modal-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 15px;
    }

    .modalShowHideTableCols .btn {
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background: #f5f5f5;
        cursor: pointer;
    }
    .modalShowHideTableCols .btn:hover {
        background: #e0e0e0;
    }

    /*Notifiche*/

    .notification {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        min-width: 250px;
        max-width: 90%;
        padding: 15px 20px;
        border-radius: 8px;
        color: #fff;
        font-weight: bold;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.4s ease;
        z-index: 2000;
    }

    .notification.show {
        opacity: 1;
        pointer-events: auto;
    }

    .notification.success {
        background-color: #28a745; /* verde */
    }

    .notification.error {
        background-color: #dc3545; /* rosso */
    }

    .notification .close-btn {
        position: absolute;
        top: 5px;
        right: 8px;
        cursor: pointer;
        font-size: 18px;
        font-weight: bold;
    }

    /*Loader*/
    .loading-box {
        background: #fff;
        border-radius: 10px;
        padding: 30px 40px;
        text-align: center;
        position: absolute;
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);        
        width: 300px;
        /*
        transform: translateX(-50%) translateY(-15%);
        */
        opacity:1;        
        transition: opacity 0.4s ease;
    }

    .loading-hide {
        opacity: 0;
        pointer-events: auto;
    }

    .loading-box .close-btn {
      position: absolute;
      top: 8px;
      right: 10px;
      font-size: 18px;
      font-weight: bold;
      cursor: pointer;
    }

    .loading-box p {
      font-size: 18px;
      color: #2c4d80;
      margin: 15px 0;
      font-weight: 500;
    }

  /* Spinner SVG */
    .spinner {
      width: 40px;
      height: 40px;
      margin: 0 auto;
      animation: rotate 1s linear infinite;
    }

    @keyframes rotate {
      100% {
        transform: rotate(360deg);
      }
    }

    .spinner circle {
      stroke: #2c4d80;
      stroke-linecap: round;
      animation: dash 1.5s ease-in-out infinite;
    }

    @keyframes dash {
      0% {
        stroke-dasharray: 1, 150;
        stroke-dashoffset: 0;
      }
      50% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -35;
      }
      100% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -124;
      }
    }